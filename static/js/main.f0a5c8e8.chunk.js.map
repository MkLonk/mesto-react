{"version":3,"sources":["components/Footer.js","components/Header.js","components/PopupWithForm.js","utils/Api.js","utils/constants.js","images/loadAvatar.gif","components/Card.js","components/ImagePopup.js","components/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Header","PopupWithForm","props","name","isOpen","method","title","children","type","value","aria-label","onClick","onClose","myApi","configApi","this","_url","url","_team","team","_token","token","dataRequest","fetch","headers","authorization","body","JSON","stringify","then","res","ok","json","Promise","reject","Error","status","urlReq","_sendRequest","about","avatarLink","newCard","link","idDeleteCard","idCard","Card","src","alt","card","onCardClick","likes","length","ImagePopup","Main","useState","userName","setUserName","userDescription","setUserDescription","loadAvatarPath","userAvatar","setUserAvatar","cards","setCards","useEffect","loadUserData","userData","avatar","catch","err","loadCards","cardsData","data","map","item","id","_id","style","backgroundImage","onEditAvatar","onEditProfile","onAddPlace","isEditAvatarPopupOpen","onClosePopups","placeholder","required","isEditProfilePopupOpen","isAddPlacePopupOpen","isSelectedCard","App","setIsEditAvatarPopupOpen","setIsEditProfilePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setIsSelectedCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0a5c8e8.chunk.js","sourcesContent":["function Footer() {\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","function Header() {\r\n  return (\r\n\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\"></div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","function PopupWithForm(props) {\r\n  return (\r\n    \r\n    <div className={`popup popup-${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\r\n      <form className={`form form-${props.name}`} name={props.name} method=\"get\">\r\n        <h2 className=\"form__title\">{props.title}</h2>\r\n        {/* тут инпуты */}\r\n\r\n          {props.children}\r\n\r\n        <button className=\"form__button-save\" type=\"submit\" value=\"Сохранить\">Да</button>\r\n        <button className=\"popup__button-close\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;\r\n\r\n/* попапы\r\n  Редактировать профиль\r\n  Новое место\r\n  Обновить аватар\r\n  Вы уверены? */","//import configApi from './constants';\n\nimport { configApi } from \"./constants\";\n\nclass Api {\n  constructor(configApi) {\n\n    this._url = configApi.url;\n    this._team = configApi.team;\n    this._token = configApi.token;\n  }\n\n  /****************************************\n   * Метод  _sendRequest - типовой макет для постоения запросов\n  ****************************************/\n  _sendRequest(url, method, dataRequest) {\n\n    return fetch(`${url}`, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: this._token,\n      },\n      body: JSON.stringify(dataRequest)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error(`Ошибка стутус кода ${res.status}`));\n      })\n  }\n\n  /****************************************\n   * Запросы для userInfo\n  ****************************************/\n\n  /* запрос данных пользователя при загрузки сайта */\n  loadUserData() {\n    const urlReq = `${this._url}/${this._team}/users/me`\n    return this._sendRequest(urlReq, 'GET')\n  }\n\n  /* запрос на изменения данных пользователя (name и about) */\n  editUserInfo(name, about) {\n    const urlReq = `${this._url}/${this._team}/users/me`\n    const dataRequest = {\n      'name': name,\n      'about': about\n    }\n    return this._sendRequest(urlReq, 'PATCH', dataRequest)\n  }\n\n  /* запрос на изменения аватара пользователя */\n  editAvatar(avatarLink) {\n    const urlReq = `${this._url}/${this._team}/users/me/avatar`\n    const dataRequest = {\n      'avatar': avatarLink\n    }\n    return this._sendRequest(urlReq, 'PATCH', dataRequest)\n  }\n\n\n  /****************************************\n   * Запросы для Cards\n  ****************************************/\n\n  /* Запрос картачек сохраненных на сервере */\n  loadCards() {\n    const urlReq = `${this._url}/${this._team}/cards`\n\n    return this._sendRequest(urlReq, 'GET')\n  }\n\n  /* Запрос на добавление новой карточки на сервер */\n  addNewCard(newCard) {\n    const urlReq = `${this._url}/${this._team}/cards`\n    const dataRequest = {\n      'name': newCard.name,\n      'link': newCard.link,\n    }\n    return this._sendRequest(urlReq, 'POST', dataRequest);\n  }\n\n  /* Запрос на удаление карточки с сервера */\n  delCard(idDeleteCard) {\n    const urlReq = `${this._url}/${this._team}/cards/${idDeleteCard}`\n\n    return this._sendRequest(urlReq, 'DELETE')\n  }\n\n  /* Запрос на постановку/снятие лайка с карточки */\n  likeCard(idCard, method){\n    const urlReq = `${this._url}/${this._team}/cards/likes/${idCard}`\n\n    return this._sendRequest(urlReq, method)\n  }\n\n}\n\n\nexport const myApi = new Api(configApi);","/* // находим блок \"profile\" в DOM\nconst profile = document.querySelector('.profile');\n\n// находим в \"profile\" все кнопки EditAvatar, EditProfile и AddGallery\nexport const buttonEditProfile = profile.querySelector('.profile__button-edit');\nexport const buttonAddGallery = profile.querySelector('.profile__button-add');\nexport const buttonEditAvatar = profile.querySelector('.profile__button-avatar-edit');\n\n// объект settingsFormValid содержит селекторы для настройки валидации  \nexport const settingsFormValid = {\n  selectorInput: '.form__input',\n  selectorSubmitButton: '.form__button-save',\n  selectorInactiveButton: 'form__button_inactive', // клас для делающий кнопку не активной\n  selectorInputError: 'form__input_type_error', // класс добавляемый если инпут с ошибкой\n  selectorErrorSuffix: 'error' //id сообщения c ошибкой\n} */\n\n// объект конфиг для апи\nexport const configApi = {\n  url: 'https://mesto.nomoreparties.co/v1',\n  team: 'cohort-21',\n\n  token: 'd2c4a281-6574-4525-818c-4a265919f89d',\n}","export default __webpack_public_path__ + \"static/media/loadAvatar.c1b8565f.gif\";","function Card(props) {\r\n\r\n  function handleClick() {\r\n    const card = { name: props.name, link: props.link }\r\n    props.onCardClick(card);\r\n  }\r\n\r\n\r\n  return (\r\n    <li className=\"gallery__element\">\r\n      <article className=\"card\">\r\n        <img className=\"card__image\" src={props.link} alt={props.name} onClick={handleClick} />\r\n        <button className=\"card__delete\" type=\"button\" aria-label=\"Удалить\"></button>\r\n        <div className=\"card__caption-container\">\r\n          <h2 className=\"card__caption\">{props.name}</h2>\r\n          <div className=\"card__like-container\">\r\n            <button className=\"card__like\" type=\"button\" aria-label=\"Нравится\"></button>\r\n            <div className=\"card__like-counter\">{props.likes.length}</div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;","function ImagePopup(props) {\r\n\r\n  return (\r\n      /* Попап для полноэкранного просмотра карточки из gallery */\r\n      <div className={`popup popup_full-screen ${props.isOpen ? 'popup_opened' : ''}`}>\r\n        <div className=\"full-screen\">\r\n          <img className=\"full-screen__image\" src={props.card.link} alt={props.card.name} />\r\n          <h2 className=\"full-screen__caption\">{props.card.name}</h2>\r\n          <button className=\"popup__button-close\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import React, { useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { myApi } from '../utils/Api'\r\nimport loadAvatarPath from '../images/loadAvatar.gif';\r\nimport Card from './Card';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction Main(props) {\r\n\r\n  const [userName, setUserName] = useState('Загружаем...');\r\n  const [userDescription, setUserDescription] = useState('Загружаем...');\r\n  const [userAvatar, setUserAvatar] = useState(loadAvatarPath);\r\n\r\n  const [cards, setCards] = useState([]);\r\n\r\n  /****************************************\r\n   * API запрос данных пользователя при загрузки сайта\r\n   ****************************************/\r\n  useEffect(() => {\r\n    myApi.loadUserData()\r\n      .then(userData => {\r\n        setUserName(userData.name)\r\n        setUserDescription(userData.about)\r\n        setUserAvatar(userData.avatar)\r\n      })\r\n      .catch(err => `Ошибка при загрузке данных о пользователе - ${err}`)\r\n  }, []);\r\n\r\n  /****************************************\r\n   * API запрос картачек сохраненных на сервере\r\n   ****************************************/\r\n\r\n  useEffect(() => {\r\n    myApi.loadCards()\r\n      .then(cardsData => {\r\n\r\n        const data = cardsData.map(item => {\r\n          return {\r\n            id: item._id,\r\n            name: item.name,\r\n            link: item.link,\r\n            likes: item.likes,\r\n          }\r\n        })\r\n        setCards(data)\r\n      })\r\n      .catch(err => `Ошибка при загрузке карточек - ${err}`)\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <main className=\"content\">\r\n\r\n      <section className=\"profile\">\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile__avatar\" style={{ backgroundImage: `url(${userAvatar})` }} >\r\n            <button className=\"profile__button-avatar-edit\" type=\"button\" aria-label=\"Изменить аватар\" onClick={props.onEditAvatar} />\r\n          </div>\r\n\r\n          <div className=\"profile__user-container\">\r\n            <h1 className=\"profile__user-name\">{userName}</h1>\r\n            <button className=\"profile__button-edit\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={props.onEditProfile} />\r\n          </div>\r\n          <button className=\"profile__button-add\" type=\"button\" aria-label=\"Добавить фото\" onClick={props.onAddPlace} />\r\n          <p className=\"profile__user-job\">{userDescription}</p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"gallery\">\r\n        <ul className=\"gallery__photo-grid\">\r\n          {cards.map(card => <Card\r\n            key={card.id}\r\n            name={card.name}\r\n            link={card.link}\r\n            likes={card.likes}\r\n            onCardClick={props.onCardClick}\r\n          />)}\r\n        </ul>\r\n      </section>\r\n\r\n      <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" isOpen={props.isEditAvatarPopupOpen} onClose={props.onClosePopups}\r\n        children={\r\n          <div className=\"form__inputs\">\r\n            <div className=\"form__input-element\">\r\n              <input className=\"form__input\" id=\"avatar-link-input\" type=\"url\" name=\"avatarLinkInput\" placeholder=\"Ссылка на картинку\" required />\r\n              <span className=\"form__input-error\" id=\"avatar-link-input-error\"></span>\r\n            </div>\r\n          </div>\r\n        } />\r\n\r\n      <PopupWithForm name=\"edit-profile\" title=\"Редактировать профиль\" isOpen={props.isEditProfilePopupOpen} onClose={props.onClosePopups}\r\n        children={\r\n          <div className=\"form__inputs\">\r\n            <div className=\"form__input-element\">\r\n              <input className=\"form__input\" id=\"user-name-input\" type=\"text\" name=\"userNameInput\" placeholder=\"Ваше имя?\" required />\r\n              <span className=\"form__input-error\" id=\"user-name-input-error\"></span>\r\n            </div>\r\n\r\n            <div className=\"form__input-element\">\r\n              <input className=\"form__input\" id=\"user-job-input\" type=\"text\" name=\"userJobInput\" placeholder=\"Чем занимаетесь?\" required />\r\n              <span className=\"form__input-error\" id=\"user-job-input-error\"></span>\r\n            </div>\r\n          </div>\r\n        } />\r\n\r\n      <PopupWithForm name=\"add-gallery\" title=\"Новое место\" isOpen={props.isAddPlacePopupOpen} onClose={props.onClosePopups}\r\n        children={\r\n          <div className=\"form__inputs\">\r\n            <div className=\"form__input-element\">\r\n              <input className=\"form__input\" id=\"mesto-name-input\" type=\"text\" name=\"name\" placeholder=\"Название\" required />\r\n              <span className=\"form__input-error\" id=\"mesto-name-input-error\"></span>\r\n            </div>\r\n\r\n            <div className=\"form__input-element\">\r\n              <input className=\"form__input\" id=\"mesto-link-input\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required />\r\n              <span className=\"form__input-error\" id=\"mesto-link-input-error\"></span>\r\n            </div>\r\n          </div>\r\n        } />\r\n\r\n      <PopupWithForm name=\"delete-card\" title=\"Вы уверены?\" isOpen={false} onClose={props.onClosePopups} />\r\n\r\n      <ImagePopup card={props.card} isOpen={props.isSelectedCard} onClose={props.onClosePopups} />\r\n\r\n    </main>\r\n\r\n  )\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header'\r\nimport Main from './Main';\r\n\r\nfunction App() {\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setIsSelectedCard(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n\r\n    setSelectedCard({})\r\n    setIsSelectedCard(false)\r\n  }\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [isSelectedCard, setIsSelectedCard] = useState(false);\r\n\r\n\r\n  return (\r\n    <div className=\"root\">\r\n\r\n      <Header />\r\n      <Main\r\n        onEditAvatar={handleEditAvatarClick} isEditAvatarPopupOpen={isEditAvatarPopupOpen}\r\n        onEditProfile={handleEditProfileClick} isEditProfilePopupOpen={isEditProfilePopupOpen}\r\n        onAddPlace={handleAddPlaceClick} isAddPlacePopupOpen={isAddPlacePopupOpen}\r\n\r\n        onCardClick={handleCardClick} card={selectedCard} isSelectedCard={isSelectedCard}\r\n\r\n        onClosePopups={closeAllPopups}\r\n      />\r\n      <Footer />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}